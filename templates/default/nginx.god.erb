<% admin = Chef::DataBagItem.load("monitoring", "god_settings")['sysadmin_name'] %>

God.watch do |w|
  w.name = "nginx"
  w.interval = 30.seconds # default
  w.start = "<%= @params[:start] %>"
  w.stop = "<%= @params[:stop] %>"
  w.restart = "<%= @params[:restart] %>"
  w.start_grace = 20.seconds
  w.restart_grace = 20.seconds
  w.pid_file = "/var/run/nginx.pid"
  w.group = "server"
  w.behavior(:clean_pid_file)

  # determine the state on startup
  w.transition(:init, { true => :up, false => :start }) do |on|
    on.condition(:process_running) do |c|
      c.running = true
      c.notify = <%= admin %>
    end
  end

  # determine when process has finished starting
  w.transition([:start, :restart], :up) do |on|
    on.condition(:process_running) do |c|
      c.running = true
      c.notify = <%= admin %>
    end

    # failsafe
    on.condition(:tries) do |c|
      c.times = 8
      c.within = 2.minutes
      c.transition = :start
      c.notify = <%= admin %>
    end
  end

  # start if process is not running
  w.transition(:up, :start) do |on|
    on.condition(:process_exits) do |c|
      c.notify = <%= admin %>
    end
  end

  w.transition(:up, :restart) do |on|
    on.condition(:http_response_code) do |c|
      c.host = 'localhost'
      c.port = 80
      c.path = '/monitor.html'
      c.code_is_not = 200
      c.timeout = 10.seconds
      c.times = [3, 5]
      c.notify = <%= admin %>
    end
  end

  # restart if memory or cpu is too high
  w.transition(:up, :restart) do |on|
    on.condition(:memory_usage) do |c|
      c.above = 800.megabytes
      c.times = [3, 5]
    end

    on.condition(:cpu_usage) do |c|
      c.above = 80.percent
      c.times = [3, 5]
    end
  end

  # lifecycle
  w.lifecycle do |on|
    on.condition(:flapping) do |c|
      c.to_state = [:start, :restart]
      c.times = 5
      c.within = 5.minutes
      c.transition = :unmonitored
      c.retry_in = 10.minutes
      c.retry_times = 5
      c.retry_within = 2.hours
      c.notify = <%= admin %>
    end
  end

end

